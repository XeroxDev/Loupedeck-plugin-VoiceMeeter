name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          path: './'
          fetch-depth: 0
      #- name: Add msbuild to PATH
      #  uses: microsoft/setup-msbuild@v1.1
      #- name: Add nuget
      #  uses: nuget/setup-nuget@v1

      #- name: Create distribution folder
      #  run: |
      #    md release/bin/win
      #    md release/bin/mac
      #    cp LoupedeckPackage.yaml release/

      #- name: Restore nuget packages
      #  run: nuget restore VoiceMeeterPlugin.sln
      
      #- name: Build app for release
      #  run: msbuild VoiceMeeterPlugin/VoiceMeeterPlugin.csproj -t:rebuild -verbosity:diag -property:Configuration=Runner

      #- name: Create lplug4 file
      #  run: |
      #    cd release/
      #    tar --exclude=VoiceMeeter.lplug4 -acf VoiceMeeter.lplug4 *
      #    cd ..

      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Get changelog entries
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          #version: ${{ steps.tag_name.outputs.current_version }}
          version: '1.0.0'

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.changelog_reader.outputs.version }}
          name: Release ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
      #    prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
      #    draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          draft: true
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
      #    artifacts: "release/VoiceMeeter.lplug4"
